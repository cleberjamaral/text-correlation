b'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nFrom Goals to Organisations: automated\\norganisation generator for MAS?\\n\\nCleber Jorge Amaral1,2 and\\nJomi Fred Hu\\xcc\\x88bner1\\n\\n1 Federal University of Santa Catarina (UFSC), Floriano\\xcc\\x81polis, SC, Brazil\\njomi.hubner@ufsc.br\\n\\nhttp://pgeas.ufsc.br/en/\\n2 Federal Institute of Santa Catarina (IFSC), Sa\\xcc\\x83o Jose\\xcc\\x81, SC, Brazil\\n\\ncleber.amaral@ifsc.edu.br\\n\\nhttp://www.ifsc.edu.br/\\n\\nAbstract. The explicit organisational structure allows agent entrants\\nin open multi-agent systems to know their positions in the organisation\\nand cooperate to achieve mutual goals. In spite of its importance, there\\nare few studies on automatic organisation generators that create explicit\\norganisational structures for open systems. This paper introduces GoOrg,\\na proposal for automatically design organisations. Our approach uses as\\ninput a goals tree and other features such as necessary skills to achieve the\\ngoal, predicted workload and throughput. The output of GoOrg is a chart\\nof a well-formed organisation. The generated structure, for instance, can\\nbe flatter or taller, accepting matrix connections or not, according to\\npreferences whether there is a need for more coordination levels.\\n\\nKeywords: Automated organisational design \\xc2\\xb7 Organisational chart \\xc2\\xb7\\nOrganisation\\xe2\\x80\\x99s structure \\xc2\\xb7 Multi-Agent Systems\\n\\n1 Introduction\\n\\nThe organisation structure is a way in which the activities of an organisation\\nare split, organised and coordinated. It allows members to know where they fit\\nrelative to others and it reflects authority relations and responsibility for goals,\\nproviding a natural way to assign tasks [6]. An organisation structure is a key\\nfactor for large-scale Multi-Agent Systems (MAS) and open systems.\\n\\nCurrently, there are a few studies over automation of organisation design\\nprocess that leads to explicit organisational structures [7, 10]. Although seminal,\\nthese works still have limitations to overcome. This paper introduces GoOrg, an\\nautomated organisation generator that takes the organisational goals tree, look-\\ning for opportunities to gather goals into roles giving as output an organisation\\nchart, an explicit organisational structure, according to preferences.\\n\\nTo discuss the problem and to present the proposed generator, this text is\\nstructured as follows: Section 2 presents the concept of automatic organisation\\n\\n? Supported by Petrobras project AG-BR, IFSC and UFSC.\\n\\nlouisedennis\\nPlaced Image\\n\\n\\n\\n2 Amaral, C. and Hu\\xcc\\x88bner, J.\\n\\ndesign and the state of art of this research area; Section 3 presents the proposal\\nin details as well as the research method, current results and planned evaluation\\ncriteria.\\n\\n2 Organisational design\\n\\nUsing Pattinson et al\\xe2\\x80\\x99s (1987) [9] definition: \\xe2\\x80\\x9cOrganisation design is the problem\\nof choosing the best organisation class - from a set of class descriptions - given\\nknowledge about the organisation\\xe2\\x80\\x99s purpose (goal, task, and constraints on the\\ngoal) and the environment in which the organisation is to operate\\xe2\\x80\\x9d. Given nec-\\nessary input, an organisational generator is able to give as output organisational\\naspects, such as, structure, goals definitions, strategy, how leadership will work,\\nwhich reward system will be used, among others [1].\\n\\nIn the administration area, there are many studies over this matter, including\\nsome frameworks that may help companies and other organisations to design\\ntheir structures [1, 4]. In multi-agent systems, there are what here is being called\\nmanual organisational generators, i.e., approaches that allow a human to design\\norganisations in a wide variety of structures and other aspects as norms, roles,\\nrelations, organisation goals and ontologies (e.g. Moise+ [8] and THOMAS [3]).\\nIn spite of having many studies about organisational design, there are still many\\ngaps regarding the wide range of disciplines and high complexity of organisations.\\nConsidering only automatic organisation generators, the focus of this research,\\nthere are few studies. This paper identified three classes of such generators.\\n\\nThe first class is automated organisational structure generators, it is focused\\n\\xe2\\x80\\x9con a specification of desired outcomes and the course of actions for achieving\\nthem, analysis of the organisational environment and available resources, alloca-\\ntion of those resources and development of organisational structures and control\\nsystem\\xe2\\x80\\x9d [6]. It processes input such as organisation goals, available agents, re-\\nsources and performance targets, producing explicit organisations definitions,\\nwhich may include roles, constraints, assignments of responsibilities, hierarchy\\nand other relations. We found only two works on this class: ODML [7], an algo-\\nrithm that uses as input mathematical models to predict efforts and create an\\norganisational structure; and, KB-ORG [10] that takes goals and roles to bind\\nagents and create coordination levels. The main drawback of existing studies in\\nthis class is the requirement of several parameters including the modelling for\\neach role, reducing its applicability when taking cost-benefit into account.\\n\\nThe second class is the automated organisational design by task planning.\\nThese planners usually create problem-driven organisations, for specific and\\ngenerally temporal purposes. The organisational structure is not explicit and\\nit usually is a casual result of a task distributing process. Some examples are\\nDOMAP [2] which is a decentralised MAS task planning and Sleight\\xe2\\x80\\x99s agent-\\ndriven planner [11] using a decentralised Markov Decision Process model. Both\\nmodels are not suitable for open systems since the tasks are allocated to a par-\\nticular MAS.\\n\\n\\n\\nFrom Goals to Organisations: automated organisation generator for MAS 3\\n\\nFinally, the third class is self-organisation generators [12]. These planners\\nproduce emergent organisations which are dynamic, may operate continuously,\\nhave overlapping tasks, have no external or central control, and information\\nflows in many directions. The organisational structure is an informal implicit\\noutcome of these bottom-up process. The target of this method is to solve some\\nproblem, not exactly to carefully design an organisation [10]. In fact, emergent\\norganisations have advantages over formal structures, which lack the ability to\\ndeal with high uncertainty and accommodate individual needs and goals [5].\\nHowever, the structure is not carefully designed and not explicit. In addition,\\nin open systems, entries and exits of agents make the system slower due to the\\nnecessity of renegotiation.\\n\\n3 Proposal\\n\\nThe proposal of this research is to develop an automated organisational structure\\ngenerator. This designing class was chosen because: (i) it is suitable to work in\\nopen systems; (ii) it helps to develop part of the organisation dimension; and (iii)\\nits outcome may be integrated into other planning techniques, reducing further\\nefforts.\\n\\nIn short, our proposal assigns goals into roles in a structured chart taking\\nadvantage of some conditions of the goals such as the ones that have the same\\nparent goal, require the same skills to be performed, have a low predicted work-\\nload, etc. Additionally, preferences can also determine whether to combine goals\\nor not, e.g., whether it is preferred a flatter or taller organisation; if matrix\\nrelations are allowed or not, maximum workload per agent, etc. Moreover, the\\npredicted throughput associated with a goal may inform the need for creation\\nof new hierarchy levels.\\n\\nPCB \\nAssembly\\n\\nApply\\nPaste\\n\\nPlace\\ncomponents\\n\\nSoldering\\nComponents\\n\\nHeatPick and Place\\nPrint\\n\\na) b)\\n\\nBuy Inputs\\n\\nBuy \\nComponents\\n\\nBuy Other\\nInputs\\n\\nPurchasePurchase\\n\\nPCB \\nProduction\\n\\nPCB \\nProduction\\nManager\\n\\nPurchasing\\nCoordinator\\n\\n \\nPurchaser\\n\\nAssembling\\nCoordinator\\n\\nPaster\\nApplicator\\n\\nComponents\\nPlacer\\n\\nComponents\\nWelder\\n\\nFig. 1. Automated design for PCB Production. a) Inputs: goals tree and necessary\\nskills. b) Output: the less flat organisation chart\\n\\nFor example, in a goal tree for Printed Circuit Board (PCB) Production it\\nmay be necessary to buy inputs and execute the assembling. The Buy Inputs\\ngoal may have as sub-goals: Buy Components and Buy Other Inputs. For both\\nsub-goals, the skill Purchase could be associated, which means that the agent(s)\\n\\n\\n\\n4 Amaral, C. and Hu\\xcc\\x88bner, J.\\n\\nthat will perform both buy sub-goals must be able to purchase items. The goal\\nPCB Assembly may have three sub-goals: Apply Paste, place Components and\\nSoldering Components. The first is associated with the skill Print, the second\\nwith the skill Pick and Place and the latter with the skill Heat.\\n\\nFig. 1b shows a possible organisation chart based on the given goals tree\\nconfigured to be less flat. In this example, the method found that the sub-goals\\nto Buy Components and Buy Paste could be combined into the same role. One of\\nthem was chosen to be the unique child of Purchasing Coordinator role. In this\\nsense, the same role will perform both Components and Other Inputs purchases.\\n\\nWhat was discussed until here is the current state of this project (filled shapes\\nof Fig. 2), i.e., using a goal tree associated with skills leads GoOrg to create an\\norganisation chart according to preferences (flatter or taller structures). It uses\\na depth-first search algorithm with cost functions associated with the number of\\nchild nodes to check how flat is the structure. The proposal for the next step is to\\nsplit the process into two phases: the organisational chart design, and the binding\\nphase. With this separation, it is expected to make GoOrg suitable to deal\\nwith asynchronous changes on the system\\xe2\\x80\\x99s resources availability and redesign\\nrequests. For instance, with simple changes in the availability of resources, the\\nprocess can be lighter. However, with bigger changes, for instance on goals tree,\\na complete redesign process may be necessary.\\n\\nFig. 2. Goal based Organisation generator (GoOrg).\\n\\nTo enhance the first phase, the next step is to add on each goal the predicted\\nworkload, necessary resources, communication topics, and predicted throughput.\\nThe expected workload can be used to know how many agents should take the\\nsame role or if the same agent can perform more than one role. With communica-\\ntion topics and throughput, the hierarchy levels and departmentalisation can be\\nset. Back to PCB Production example, the role Purchasing Coordinator would\\nbe not necessary, maybe its \\xe2\\x80\\x9cchild\\xe2\\x80\\x9d could be directly associated with the top\\nrole PCB Production Manager, which would coordinate the processes associated\\nwith this role. This can be done according to the number of agents associated\\nwith lower roles, and throughput, which affects coordination efforts. Sometimes,\\n\\n\\n\\nFrom Goals to Organisations: automated organisation generator for MAS 5\\n\\ninstead of reducing the number of levels, the algorithm should increase it, sup-\\nposing a situation of a large number of agents to be coordinated.\\n\\nIn the second phase, it is proposed to bind resources and roles. The inputs\\nare available agents and skills, available artifacts and organisational design pref-\\nerences. With available agents and artifacts a binding process can be done, allo-\\ncating agents and resources to roles. The aim of this binding is to guarantee that\\nthe created structure can be well-formed when it runs with the given resources.\\nFinally, the output is an organisational chart with artifacts allocated and agents\\nassigned to roles. The binding process can solve some allocation challenges that\\ndoes not require a redesign. To illustrate it, consider that Buy Components sub-\\ngoal also needs Electronics Knowledge skill, and the chart has created different\\nroles for purchasing, they can be called Components Purchaser and Other Inputs\\nPurchaser. Consider that agent A and agent B play, respectively, the referred\\nroles having all the necessary skills to play both. Consider now that agent A left\\nthe system and agent C has joined it, but this agent has no Electronics Knowl-\\nedge skill. The binding process can move agent B to Components Purchaser role,\\nassigning agent C to Other Inputs Purchaser role.\\n\\n3.1 Research method and evaluation\\n\\nIn the adopted research method has 5 steps: (i) bibliography revision under\\nadministration basis theory, organisation generators and organisations in multi-\\nagent systems; (ii) defining the problem, the inputs and output; (iii) propose\\na way to solve the problem; (iv) implement the solution; and, (v) evaluate the\\nsolution. The three first steps are done. As a result of the first step, we have found\\nthree classes of generators. In the second step, we have positioned our research\\non automated organisational structure generator class. In the third step, we have\\nproposed the use of state space search algorithm to solve this problem.\\n\\nOn the fourth step, we will add to the model new inputs. These data may\\nalso allow enhancing the algorithm in the way to decide when a coordination\\nrole can be subtracted, maintained or even new ones created. In the sequence,\\nother state space search algorithm and cost functions will be experienced for\\noptimisation purpose and to give more configuration options.\\n\\nFinally, we will evaluate our solution using existing domains [2, 7, 10]. The\\ngoals tree and other aspects for these domains will be manually identified and we\\nwill first evaluate the amount of necessary input parameter needed for GoOrg.\\nWith these inputs, the ability of GoOrg to properly design organisations will\\nbe evaluated. These situations will be simulated to check if the organisations\\nare able to fulfil the goals, in this sense, the evaluation will be qualitative. The\\npreferences will be varied to evaluate different configurations and their impact\\non the output.\\n\\n4 Conclusion\\n\\nThis paper has presented a proposal for an automated generator of organisations\\nbased on goals and their properties as inputs. The current status of this research\\n\\n\\n\\n6 Amaral, C. and Hu\\xcc\\x88bner, J.\\n\\nshows that it is feasible to draw an organisational chart only based on organi-\\nsation\\xe2\\x80\\x99s aspects, in other words, it is not necessary to build complex models to\\nuse as input to this system. It is intended to enhance the current version adding\\nnew input which is expected to bring the necessary information to produce use-\\nful organisational charts, taking advantage of opportunities to join goals on the\\nsame roles, adding or removing coordination levels.\\n\\nBesides the organisation chart, an extra outcome of GoOrg may be some\\ndecentralised task planning input since this study is also expecting to bind agents\\nand roles. The previous allocation of resources is a guarantee that when running\\nthis system is able to have a well-formed organisation. About evaluation criteria,\\nit is intended to apply the model in known domains testing if it is able to\\nbuild suitable structures. These organisations will be simulated in a variety of\\nconditions and tested if goals were fulfilled.\\n\\nReferences\\n\\n1. Burton, R.M., Obel, B., Desanctis, G.: Organizational design: a step-by-step ap-\\nproach (2011). https://doi.org/10.1017/CBO9780511894961\\n\\n2. Cardoso, R.C., Bordini, R.H.: A modular framework for decentralised multi-agent\\nplanning. In: Proceedings of the 16th Conference on Autonomous Agents and Mul-\\ntiAgent Systems. pp. 1487\\xe2\\x80\\x931489. Sa\\xcc\\x83o Paulo, Brazil (2017)\\n\\n3. Criado, N., Argente, E., Botti, V.: THOMAS: An agent platform for supporting\\nnormative multi-agent systems. Journal of Logic and Computation 23(2), 309\\xe2\\x80\\x93333\\n(2013). https://doi.org/10.1093/logcom/exr025\\n\\n4. De Pinho Rebouc\\xcc\\xa7as De Oliveira, D.: Estrutura Organizacional: Uma Abordagem\\nPara Resultados e Competitividade. ATLAS EDITORA (2006)\\n\\n5. Fink, S., Jenks, R., Willits, R.: Designing and Managing Organizations. Irwin Series\\nin Financial Planning and Insurance, R.D. Irwin (1983)\\n\\n6. Hatch, M.: Organization Theory: Modern, Symbolic, and Postmodern Perspectives.\\nOxford University Press (1997)\\n\\n7. Horling, B., Lesser, V.: Using quantitative models to search for appropriate orga-\\nnizational designs. Autonomous Agents and Multi-Agent Systems 16(2) (2008)\\n\\n8. Hu\\xcc\\x88bner, J.F., Sichman, J.S.: Organizac\\xcc\\xa7a\\xcc\\x83o de sistemas multiagentes. III Jor-\\nnada de MiniCursos de Intelige\\xcc\\x82ncia Artificial JAIA03 8, 247\\xe2\\x80\\x93296 (2003),\\nhttp://www.das.ufsc.br/ jomi/pubs/2003/Hubner-jaia2003.pdf\\n\\n9. Pattison, H.E., Corkill, D.D., Lesser, V.R.: Chapter 3 - instantiating descriptions of\\norganizational structures. In: Huhns, M.N. (ed.) Distributed Artificial Intelligence,\\npp. 59 \\xe2\\x80\\x93 96 (1987)\\n\\n10. Sims, M., Corkill, D., Lesser, V.: Automated organization design for multi-agent\\nsystems. Autonomous Agents and Multi-Agent Systems 16(2) (2008)\\n\\n11. Sleight, J., Durfee, E.H.: Organizational design principles and techniques for\\ndecision-theoretic agents. pp. 463\\xe2\\x80\\x93470. AAMAS \\xe2\\x80\\x9913, International Foundation for\\nAutonomous Agents and Multiagent Systems, Richland, SC (2013)\\n\\n12. Ye, D., Zhang, M., Vasilakos, A.V.: A Survey of Self-organisation Mechanisms in\\nMulti-Agent Systems. IEEE Transactions On SMC: Systems 47(3) (2016)\\n\\n\\n'